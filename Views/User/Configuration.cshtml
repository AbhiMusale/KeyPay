@model KeyPay.Models.Configuration

@{
    ViewBag.Title = "Configuration";
}

@using (Html.BeginForm())
{
    if (string.IsNullOrEmpty(@HttpContext.Current.User.Identity.Name))
    {
        Response.Redirect("/User/Login");
    }
    else
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-horizontal">

            <div class="form-group">
                <h2 class="col-md-3">Configuration</h2>
                <div class="col-md-7"><label style="float:right; margin-top: 20px; padding-top: 15px;">Welcome, @HttpContext.Current.User.Identity.Name</label></div>
                <div class="col-md-2">
                    @Ajax.ActionLink("Logout", "Logout", null, new AjaxOptions { HttpMethod = "POST" }, htmlAttributes: new { @class = "btn btn-info btn-lg", style = "float: right; margin-top: 20px;", onclick = "document.forms[0].submit();" })
                    @*@Html.ActionLink("Logout", "Logout", null, new { @class = "btn btn-info btn-lg", style = "float: right; margin-top: 20px;" })*@
                </div>
            </div>

            <hr />

            <div class="form-group">
                <label class="control-label col-md-3"></label>
                <div class="col-md-offset-2 col-md-9">
                    @if (!string.IsNullOrEmpty(ViewBag.Message))
                    {
                        if (((string)ViewBag.Message).ToUpper().Contains("UPDATE"))
                        {
                            <label style="color:green;">
                                @ViewBag.Message
                            </label>
                        }
                        else
                        {
                            <label style="color:red;">
                                @ViewBag.Message
                            </label>
                        }
                    }
                </div>
            </div>

            <div class="panel panel-info">
                <div class="panel-heading">Sage Intacct</div>
                <div class="panel-body">
                    <div class="form-group">
                        <label class="control-label col-md-3">Intacct URL</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.IntacctURL, new { htmlAttributes = new { @class = "form-control", placeholder = "Intacct URL", maxlength = 512, style = "cursor: default;" } })
                            @Html.ValidationMessageFor(model => model.IntacctURL, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">Intacct Company ID</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.IntacctCompanyID, new { htmlAttributes = new { @class = "form-control", placeholder = "Intacct Company ID", maxlength = 40, style = "cursor: default;" } })
                            @Html.ValidationMessageFor(model => model.IntacctCompanyID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">Intacct User Name</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.strIntacctUserName, new { htmlAttributes = new { @class = "form-control", placeholder = "Intacct User Name", maxlength = 40, style = "cursor: default;", type = "password" } })
                            @Html.ValidationMessageFor(model => model.strIntacctUserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">Intacct Password</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.strIntacctPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Intacct Password", maxlength = 40, style = "cursor: default;", type = "password" } })
                            @Html.ValidationMessageFor(model => model.strIntacctPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">Intacct Sender ID</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.IntacctSenderID, new { htmlAttributes = new { @class = "form-control", placeholder = "Intacct Sender ID", maxlength = 40, style = "cursor: default;" } })
                            @Html.ValidationMessageFor(model => model.IntacctSenderID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">Intacct Sender Password</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.strIntacctSenderPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Intacct Sender Password", maxlength = 40, style = "cursor: default;", type = "password" } })
                            @Html.ValidationMessageFor(model => model.strIntacctSenderPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-info">
                <div class="panel-heading">KeyPay</div>
                <div class="panel-body">
                    <div class="form-group">
                        <label class="control-label col-md-3">Journal URL</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.JournalURL, new { htmlAttributes = new { @class = "form-control", placeholder = "Journal URL", maxlength = 512, style = "cursor: default;" } })
                            @Html.ValidationMessageFor(model => model.JournalURL, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">KeyPay API</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.strKeyPayAPI, new { htmlAttributes = new { @class = "form-control", placeholder = "KeyPay API", maxlength = 1024, style = "cursor: default;", type = "password" } })
                            @Html.ValidationMessageFor(model => model.strKeyPayAPI, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">Business ID</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.BusinessID, new { htmlAttributes = new { @class = "form-control", placeholder = "Business ID", maxlength = 40, style = "cursor: default;" } })
                            @Html.ValidationMessageFor(model => model.BusinessID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">Journal</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Journal, new { htmlAttributes = new { @class = "form-control", placeholder = "Journal", maxlength = 40, style = "cursor: default;" } })
                            @Html.ValidationMessageFor(model => model.Journal, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">Posting Mode</label>
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.PostingMode, new SelectList(Enum.GetValues(typeof(KeyPay.Models.PostingModes))), htmlAttributes: new { @class = "form-control", style = "cursor: default;" })
                            @*@Html.EditorFor(model => model.PostingMode, new { htmlAttributes = new { @class = "form-control", placeholder = "Posting Mode", maxlength = 40, style = "cursor: default;" } })*@
                            @Html.ValidationMessageFor(model => model.PostingMode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">Log Files</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.LogFiles, new { htmlAttributes = new { @class = "form-control", placeholder = "Log Files", maxlength = 40, style = "cursor: default;" } })
                            @Html.ValidationMessageFor(model => model.LogFiles, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-info">
                <div class="panel-heading">Email</div>
                <div class="panel-body">
                    <div class="form-group">
                        <label class="control-label col-md-3">Email User</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.EmailUser, new { htmlAttributes = new { @class = "form-control", placeholder = "Email User", maxlength = 40, style = "cursor: default;" } })
                            @*@Html.ValidationMessageFor(model => model.EmailUser, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">From Email</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.FromEmail, new { htmlAttributes = new { @class = "form-control", placeholder = "From Email", maxlength = 40, style = "cursor: default;" } })
                            @Html.ValidationMessageFor(model => model.FromEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">Email Password</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.strEmailPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Email Password", maxlength = 40, style = "cursor: default;", type = "password" } })
                            @Html.ValidationMessageFor(model => model.strEmailPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">SMTP Server</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.SMTPServer, new { htmlAttributes = new { @class = "form-control", placeholder = "SMTP Server", maxlength = 40, style = "cursor: default;" } })
                            @Html.ValidationMessageFor(model => model.SMTPServer, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">Email Port</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.EmailPort, new { htmlAttributes = new { @class = "form-control", placeholder = "Email Port", maxlength = 40, style = "cursor: default;", type = "number" } })
                            @Html.ValidationMessageFor(model => model.EmailPort, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">SSL</label>
                        <div class="col-md-9">
                            @Html.CheckBoxFor(model => model.SSL, new { htmlAttributes = new { @class = "form-control", style = "cursor: default;" } })
                            @Html.ValidationMessageFor(model => model.SSL, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">To Email</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.ToEmail, new { htmlAttributes = new { @class = "form-control", placeholder = "To Email", maxlength = 40, style = "cursor: default;" } })
                            @Html.ValidationMessageFor(model => model.ToEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">CC Email</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.CCEmail, new { htmlAttributes = new { @class = "form-control", placeholder = "CC Email", maxlength = 40, style = "cursor: default;" } })
                            @Html.ValidationMessageFor(model => model.CCEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-info">
                <div class="panel-heading">Dimensions</div>
                <div class="panel-body">
                    <div class="form-group">
                        <label class="control-label col-md-3">Department</label>
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.Department, Enumerable.Range(-1, 6).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), htmlAttributes: new { @class = "form-control", style = "cursor: default;" })
                            @*@Html.DropDownListFor(model => model.Department, new SelectList(Enum.GetValues(typeof(KeyPay.Models.DimensionValues))), new { htmlAttributes = new { @class = "form-control", style = "cursor: default;" } })*@
                            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">Location</label>
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.Location, Enumerable.Range(-1, 6).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), htmlAttributes: new { @class = "form-control", style = "cursor: default;" })
                            @*@Html.DropDownListFor(model => model.Location, new SelectList(Enum.GetValues(typeof(KeyPay.Models.DimensionValues))), new { htmlAttributes = new { @class = "form-control", style = "cursor: default;" } })*@
                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">Project</label>
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.Project, Enumerable.Range(-1, 6).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), htmlAttributes: new { @class = "form-control", style = "cursor: default;" })
                            @*@Html.DropDownListFor(model => model.Project, new SelectList(Enum.GetValues(typeof(KeyPay.Models.DimensionValues))), new { htmlAttributes = new { @class = "form-control", style = "cursor: default;" } })*@
                            @Html.ValidationMessageFor(model => model.Project, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3"></div>
                <div class="col-md-9">
                    @*@Html.ActionLink("Save", "ConfigurationEdit", null, new { @class = "btn btn-info btn-lg", style = "width: 25%" })*@
                    @*@Html.ActionLink("Save", "Configuration", "User")*@
                    <input type="submit" class="btn btn-info btn-lg" name="Edit" value="Save" />
                </div>
            </div>
        </div>
    }
}

<script>

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
